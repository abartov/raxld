To-Do List for the Interedition Open Annotation Collaboration Server

- update sample JSON files to reflect new, generic constraint semantics
- update sample JSON dir with files and curl command lines for all operations
- add a convenience script to the sample JSON dir to automatically replace the server IP with a command line argument.
- add an option to the annotations query that dumps the annotations in full, not just their URIs
- Fix insertion logic
  - sort annotations by start position
  - handle overlapping annotations correctly
- Add support for line= positions
- Improve look of annotated text renderer
- Add support for images as annotation targets in the renderer
- Support editing annotations with PUT operations
- Implement access control (API keys?)
- Make annotations versioned entities?
- Update annotation constraints when the constraint service returns an updated position, while keeping the original position as well
- Make validation phase configurable (on/off, validation service URL, currently hard-coded in annotations_controller.rb)
- if there's no constraint, I currently just ignore the annotation.  TODO: eventually, place the annotation at the beginning of the URI -- i.e. treat URI frags correctly
- Add an HTML interface to everything beside the renderer
- Add query options (by author, by annotation type)
- Accept and emit RDF

From Doug:
Could you add a parameter to the annotation server called "jsonp".
The value of this parameter should be pre-prepended to the output
as a JS function and append ); to the end.

For example:

&jsonp=callMe

should return

callMe(
[JSON BLOB]
);
